import 'package:flutter/material.dart';



class FlashcardScreen extends StatefulWidget {
  String title;
  String topic;
  String text;
  int flashID;


  // Updated constructor with additional parameters
   FlashcardScreen({
    super.key,
    required this.title,
    required this.topic,
    required this.text,
    required this.flashID,
  });
        


  @override
  _FlashcardScreenState createState() => _FlashcardScreenState();
}

class _FlashcardScreenState extends State<FlashcardScreen> {
  bool _isFront = true;

  void _flipCard() {
    setState(() {
      _isFront = !_isFront;
    });
  }

  @override
  Widget build(BuildContext context) {
    return 
    
      Center(
        child: GestureDetector(
          onTap: _flipCard,
          child: AnimatedSwitcher(
            duration: const Duration(milliseconds: 300),
            transitionBuilder: (Widget child, Animation<double> animation) {
              return ScaleTransition(scale: animation, child: child);
            },

            child: _isFront
                ? FlashcardFront(key: const ValueKey(1), title: widget.title, topic: widget.topic)
                : FlashcardBack(key: const ValueKey(2), title: widget.title, topic: widget.topic, text: widget.text,),

          ),
        ),
      );
    
  }
}

class FlashcardFront extends StatelessWidget {
  final String title;
  final String topic;
 


  const FlashcardFront({
    super.key,
    required this.title,
    required this.topic,
  });

  @override
  Widget build(BuildContext context) {
    return Container(
      key: key,
      width: 312,
      height: 480,
      
      decoration: BoxDecoration(
        color: const Color.fromARGB(255,21,21,20),
        boxShadow:const [
      BoxShadow(
        color: Color.fromARGB(128, 0, 0, 0),
        spreadRadius: 1,
        blurRadius: 4,
        offset: Offset(0, 3), // changes position of shadow
      ),
    ],
        borderRadius: BorderRadius.circular(12.0),),


      child: SingleChildScrollView(
        child: Padding(
          padding: const EdgeInsets.only(left: 8, right: 8, bottom: 8, top: 12),
          child: Column(
            children: [
              Stack(
                alignment: Alignment.center,
                children: [Container(
                  
                  height: 110,
                  width: 220, //disgusting magic number
                  decoration: const BoxDecoration(image: DecorationImage(image: AssetImage("assets/images/betterFlashcardsTitleBorder.png"), fit: BoxFit.fitWidth)))
            ,
            
              Text(
                  title,
                  style: Theme.of(context).textTheme.headlineMedium!.copyWith(color: const Color.fromARGB(255, 221,219,255),  fontSize : 48,), textAlign: TextAlign.center,
                ),]
              ),
          
              const SizedBox(height: 30),

              Text(
                topic,
                style: Theme.of(context).textTheme.bodyMedium!.copyWith(color: const Color.fromARGB(255, 221,219,255)), textAlign: TextAlign.center,
              ),

              const SizedBox(height: 30),


              Container(
                  
                  height: 128,
                  width: 128, //disgusting magic number
                  decoration: const BoxDecoration(image: DecorationImage(image: AssetImage("assets/images/placeholder.png"), fit: BoxFit.fill)))
            ,
            const SizedBox(height: 30),


            ElevatedButton(
                          onPressed: ()=>print("Placeholder"),
      
                          style: ElevatedButton.styleFrom(minimumSize: const Size(15, 20), backgroundColor: const Color.fromARGB(255, 81, 81, 163), padding: const EdgeInsets.all(12)),
                          child: Text('Download PDF or Generate Text Transcript', style: Theme.of(context).textTheme.labelMedium!.copyWith(color: const Color.fromARGB(255, 221,219,255), height: 1.3, fontSize: 10), textAlign: TextAlign.center,),
                        ),

            const SizedBox(height: 30),

            Text(
                'Generated By CardSum',
                style: Theme.of(context).textTheme.labelMedium!.copyWith(color: const Color.fromARGB(255, 221,219,255), height: 1.3, fontSize: 12), textAlign: TextAlign.center,
              ),
              
              
            const SizedBox(height: 32),
            Container(width: 230, height: 2, decoration: BoxDecoration(color: const Color.fromARGB(255, 221,219,255),
            borderRadius: BorderRadius.circular(48.0)),
              ),
              
              
              ],
          ),
        ),
      ),
    );
  }
}

class FlashcardBack extends StatelessWidget {

  final String title;
  final String topic;
  final String text;


  const FlashcardBack({
    super.key,
    required this.title,
    required this.topic,
    required this.text,
  });

  @override
  Widget build(BuildContext context) {
    return Container(
      key: key,
      width: 312,
      height: 480,
      
      decoration: BoxDecoration(
        color: const Color.fromARGB(255,21,21,20),
        boxShadow:const [
      BoxShadow(
        color: Color.fromARGB(128, 0, 0, 0),
        spreadRadius: 1,
        blurRadius: 4,
        offset: Offset(0, 3), // changes position of shadow
      ),
    ],
        borderRadius: BorderRadius.circular(12.0),),


      child: SingleChildScrollView(
        child: Padding(
          padding: const EdgeInsets.only(left: 32, right: 32, bottom: 2, top: 12),
          child: Column(
            children: [
              Stack(
                alignment: Alignment.center,
                children: [Container(
                  
                  height: 110,
                  width: 220, //disgusting magic number
                  decoration: const BoxDecoration(image: DecorationImage(image: AssetImage("assets/images/betterFlashcardsTitleBorder.png"), fit: BoxFit.fitWidth)))
            ,
            
              Text(
                  title,
                  style: Theme.of(context).textTheme.headlineMedium!.copyWith(color: const Color.fromARGB(255, 221,219,255),  fontSize : 48,), textAlign: TextAlign.center,
                ),]
              ),
          
              const SizedBox(height: 30),

              Text(
                topic,
                style: Theme.of(context).textTheme.bodyMedium!.copyWith(color: const Color.fromARGB(255, 221,219,255)), textAlign: TextAlign.center,
              ),

              const SizedBox(height: 30),


              Text(
                text,
                style: Theme.of(context).textTheme.bodyMedium!.copyWith(color: const Color.fromARGB(255, 221,219,255), fontSize: 12), textAlign: TextAlign.center,
              ),
            
            const SizedBox(height: 30),


            ElevatedButton(
                          onPressed: ()=>print("Placeholder"),
      
                          style: ElevatedButton.styleFrom(minimumSize: const Size(15, 20), backgroundColor: const Color.fromARGB(255, 81, 81, 163), padding: const EdgeInsets.all(12)),
                          child: Text('Download PDF or Generate Text Transcript', style: Theme.of(context).textTheme.labelMedium!.copyWith(color: const Color.fromARGB(255, 221,219,255), height: 1.3, fontSize: 10), textAlign: TextAlign.center,),
                        ),

            const SizedBox(height: 30),

            Text(
                'Generated By CardSum',
                style: Theme.of(context).textTheme.labelMedium!.copyWith(color: const Color.fromARGB(255, 221,219,255), height: 1.3, fontSize: 12), textAlign: TextAlign.center,
              ),
              

            const SizedBox(height: 26),
            Container(width: 230, height: 2, decoration: BoxDecoration(color: const Color.fromARGB(255, 221,219,255),
            borderRadius: BorderRadius.circular(48.0)),
              ),
              
              ],
          ),
        ),
      ),
    );
  }
}
